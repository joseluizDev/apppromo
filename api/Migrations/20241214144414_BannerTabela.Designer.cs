// <auto-generated />
using System;
using BackAppPromo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackAppPromo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241214144414_BannerTabela")]
    partial class BannerTabela
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Banner", b =>
                {
                    b.Property<int>("Ban_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ban_id"));

                    b.Property<string>("Ban_imagem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Ban_temp")
                        .HasColumnType("integer");

                    b.Property<string>("Ban_titulo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Ban_id");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Cat_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Cat_id"));

                    b.Property<string>("Cat_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Cat_id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Imagem", b =>
                {
                    b.Property<int>("Img_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Img_id"));

                    b.Property<string>("Img_url")
                        .IsRequired()
                        .HasMaxLength(999)
                        .HasColumnType("character varying(999)");

                    b.Property<int>("Pro_id")
                        .HasColumnType("integer");

                    b.HasKey("Img_id");

                    b.HasIndex("Pro_id");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Pro_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Pro_id"));

                    b.Property<int>("Cat_id")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Pro_data_cadastrado")
                        .HasColumnType("date");

                    b.Property<string>("Pro_descricao")
                        .IsRequired()
                        .HasMaxLength(999)
                        .HasColumnType("character varying(999)");

                    b.Property<string>("Pro_instagram")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Pro_preco")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Pro_preco_promocional")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("Pro_quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("Pro_titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Pro_whats")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Usu_id")
                        .HasColumnType("integer");

                    b.HasKey("Pro_id");

                    b.HasIndex("Cat_id");

                    b.HasIndex("Usu_id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("Res_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Res_id"));

                    b.Property<int>("Pro_id")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Res_data_reserva")
                        .HasColumnType("date");

                    b.Property<string>("Res_email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Res_endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Res_entrega")
                        .HasColumnType("boolean");

                    b.Property<string>("Res_instagram")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Res_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Res_quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("Res_referencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Res_retirada")
                        .HasColumnType("boolean");

                    b.Property<string>("Res_telefone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Res_valor_total")
                        .HasColumnType("numeric");

                    b.HasKey("Res_id");

                    b.HasIndex("Pro_id");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Usu_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Usu_id"));

                    b.Property<string>("Usu_email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Usu_senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Usu_id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Imagem", b =>
                {
                    b.HasOne("BackAppPromo.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("Pro_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Produto", b =>
                {
                    b.HasOne("BackAppPromo.Domain.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("Cat_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackAppPromo.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usu_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BackAppPromo.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("BackAppPromo.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("Pro_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
